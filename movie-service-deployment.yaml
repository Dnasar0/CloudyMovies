apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: movie-service
  name: movie-service
spec:
  selector:
    matchLabels:
      io.kompose.service: movie-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: movie-service
    spec:
      containers:
        - args:
            - bash
            - -c
            - pip install -r requirements.txt && python -u movie_server.py
          image: python:3.12.9
          name: movie-service
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 200
            periodSeconds: 10
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: movie-mongo-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: movie-mongo-secret
                  key: DB_PASS
          ports:
            - containerPort: 50052
              protocol: TCP
          volumeMounts:
            - mountPath: /app/requirements.txt
              name: movie-service-cm0
              subPath: requirements.txt
            - mountPath: /app/movie_server.py
              name: movie-service-cm1
              subPath: movie_server.py
            - mountPath: /app/movie_pb2_grpc.py
              name: movie-service-cm2
              subPath: movie_pb2_grpc.py
            - mountPath: /app/movie_pb2.py
              name: movie-service-cm3
              subPath: movie_pb2.py
          workingDir: /app
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: requirements.txt
                path: requirements.txt
            name: movie-service-cm0
          name: movie-service-cm0
        - configMap:
            items:
              - key: movie_server.py
                path: movie_server.py
            name: movie-service-cm1
          name: movie-service-cm1
        - configMap:
            items:
              - key: movie_pb2_grpc.py
                path: movie_pb2_grpc.py
            name: movie-service-cm2
          name: movie-service-cm2
        - configMap:
            items:
              - key: movie_pb2.py
                path: movie_pb2.py
            name: movie-service-cm3
          name: movie-service-cm3
