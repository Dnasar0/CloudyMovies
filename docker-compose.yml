services:
    account-service:
        image: python:3.12.9
        container_name: account-service
        volumes:
            - ./src/account_service/requirements.txt:/app/requirements.txt
            - ./src/account_service/account_server.py:/app/account_server.py
            - ./src/account_service/account_pb2_grpc.py:/app/account_pb2_grpc.py
            - ./src/account_service/account_pb2.py:/app/account_pb2.py
        working_dir: /app
        expose:
            - "50051"
        ports:
            - "50051:50051"
        command: bash -c "pip install -r requirements.txt && python -u account_server.py"
        depends_on:
            - mongodb
        networks:
            - network

    tournament-service:
        image: python:3.12.9
        container_name: tournament-service
        volumes:
            - ./src/tournament_service/requirements.txt:/app/requirements.txt
            - ./src/tournament_service/tournament_server.py:/app/tournament_server.py
            - ./src/tournament_service/tournament_pb2_grpc.py:/app/tournament_pb2_grpc.py
            - ./src/tournament_service/tournament_pb2.py:/app/tournament_pb2.py
            - ./src/account_service/account_pb2_grpc.py:/app/account_pb2_grpc.py
            - ./src/account_service/account_pb2.py:/app/account_pb2.py
        working_dir: /app
        command: bash -c "pip install -r requirements.txt && python -u tournament_server.py"
        expose:
            - "50053"
        ports:
            - "50053:50053"
        depends_on:
            - mongodb
        networks:
            - network

    movie-service:
        image: python:3.12.9
        container_name: movie-service
        volumes:
            - ./src/movie_service/requirements.txt:/app/requirements.txt
            - ./src/movie_service/movie_server.py:/app/movie_server.py
            - ./src/movie_service/movie_pb2_grpc.py:/app/movie_pb2_grpc.py
            - ./src/movie_service/movie_pb2.py:/app/movie_pb2.py
        working_dir: /app
        expose:
            - "50052"
        ports:
            - "50052:50052"
        command: bash -c "pip install -r requirements.txt && python -u movie_server.py"
        depends_on:
            - mongodb
        networks:
            - network
    frontend:
        image: python:3.12.9
        container_name: game-service
        volumes:
            - ./src/game_service/requirements.txt:/app/requirements.txt
            - ./src/game_service/game.py:/app/game.py
            - ./src/account_service/account_pb2_grpc.py:/app/account_pb2_grpc.py
            - ./src/account_service/account_pb2.py:/app/account_pb2.py  
            - ./src/movie_service/movie_pb2_grpc.py:/app/movie_pb2_grpc.py
            - ./src/movie_service/movie_pb2.py:/app/movie_pb2.py                    
            - ./src/tournament_service/tournament_pb2_grpc.py:/app/tournament_pb2_grpc.py
            - ./src/tournament_service/tournament_pb2.py:/app/tournament_pb2.py            
        working_dir: /app
        expose:
            - "5000"
        ports:
            - "5000:5000"
        command: bash -c "pip install -r requirements.txt && python -u game.py"
        depends_on:
            - movie-service
            - tournament-service
            - account-service
            - mongodb
        networks:
            - network

    mongodb:
        image: mongo:latest
        container_name: mongodb
        ports:
            - "27017:27017"
        expose:
            - "27017"
        # Uncomment the line below to persist MongoDB data across container restarts
        #   - ./mongo-data:/data/db
        # Uncomment the lines below to enable authentication in MongoDB
        # environment:
        #   MONGO_INITDB_ROOT_USERNAME: root
        #   MONGO_INITDB_ROOT_PASSWORD: example
        networks:
            - network

networks:
    network:
        driver: bridge
